import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from datetime import datetime, timedelta
from database import load_tags_db, save_tags_db

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –∏–≥—Ä–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def send_instructions(update: Update):
    user_id = update.message.from_user.id  # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id –∏–∑ –æ–±—ä–µ–∫—Ç–∞ update
    user_data = load_tags_db().loc[load_tags_db()['ID'] == user_id]

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = [
        [InlineKeyboardButton("üéÆ–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–µ–∂–∏–º", callback_data="choose_mode")],
        [InlineKeyboardButton("‚ôªÔ∏è–ù–∞–∑–∞–¥", callback_data="go_back")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –∏ –∫–Ω–æ–ø–∫–∞–º–∏
    await update.message.reply_text(
        "‚û°Ô∏è–ò–ù–°–¢–†–£–ö–¶–ò–Ø‚¨ÖÔ∏è\n"
        "üöÄ–î–ª—è –∏–≥—Ä—ã –≤ Lucky Jet: –î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ - –ø–æ–∫–∞ –ª–µ—Ç–∏—Ç —Ä–∞–∫–µ—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ –Ω–∞–∂–º–∏—Ç–µ '–ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª', "
        "—Ç–∞–∫ –±–æ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∏ –¥–∞—Å—Ç —Ç–æ—á–Ω—ã–π —Å–∏–≥–Ω–∞–ª. –ù–µ –±–µ—Ä–∏—Ç–µ —Å–∏–≥–Ω–∞–ª –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—É–Ω–¥–∞, –±–æ—Ç –Ω–µ —É—Å–ø–µ–µ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥, –∏ —ç—Ç–æ—Ç —Å–∏–≥–Ω–∞–ª —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –ø—Ä–æ–∏–≥—Ä—ã—à—É. "
        "–ï—Å–ª–∏ –±–æ—Ç –≥–æ–≤–æ—Ä–∏—Ç '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–∞–ø—Ä–∏–º–µ—Ä 1 —Ö–æ–¥' - –∂–¥—ë—Ç–µ, –ø–æ–∫–∞ —Ä–∞–∫–µ—Ç–∞ —É–ª–µ—Ç–∏—Ç 1 —Ä–∞–∑ –∏ —Å—Ç–∞–≤–∏—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥.\n"
        "üí£–î–ª—è –∏–≥—Ä—ã –≤ Mines: –î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ - —Å –Ω–∞—á–∞–ª–∞ –≤–æ–∑—å–º–∏—Ç–µ —Å–∏–≥–Ω–∞–ª —É –±–æ—Ç–∞, –±–æ—Ç –≤—ã–¥–∞—Å—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –∏ —Ç–æ—á–Ω—ã–π —Å–∏–≥–Ω–∞–ª, —Å—Ç–∞–≤—å—Ç–µ —Ç–æ—á–Ω–æ —Ç–∞–∫, –∫–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç –±–æ—Ç.\n"
        "‚ö†Ô∏è–ü–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –ø–æ—Å–ª–µ–¥—É—é—â–∏–º —Å–∏–≥–Ω–∞–ª–æ–º, –±–æ—Ç –ø—Ä–æ—Å–∏—Ç –ø–æ–¥–æ–∂–¥–∞—Ç—å 10 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –æ–Ω —É—Å–ø–µ–ª –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é —Å—Ç–∞–≤–∫—É.\n"
        "‚õî–°—Ç–∞–≤—å—Ç–µ 1-3-5% –æ—Ç –±–∞–ª–∞–Ω—Å–∞, —á—Ç–æ–±—ã –≤ —Å–ª—É—á–∞–µ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ —É –≤–∞—Å –±—ã–ª–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç—ã–≥—Ä–∞—Ç—å—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —Å–∏–≥–Ω–∞–ª–µ.\n"
        "üí∞–ï—Å–ª–∏ —Å–∏–≥–Ω–∞–ª –Ω–µ –∑–∞—à—ë–ª - —É–≤–µ–ª–∏—á—å—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ –≤ 2 —Ä–∞–∑–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª.\n",
        reply_markup=reply_markup
    )

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É
async def start_subscription_timer(update, user_data):
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –Ω–∞ 28 –¥–Ω–µ–π (29-–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞ –¥–µ–Ω—å –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è)
    await asyncio.sleep(28 * 24 * 60 * 60)  # 28 –¥–Ω–µ–π –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    await update.message.reply_text("‚ö†Ô∏è–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!üòî –£ –≤–∞—Å –æ—Å—Ç–∞–ª—Å—è 1 –¥–µ–Ω—å (24 —á–∞—Å–∞) –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–ª–∞—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞!")

    # –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–Ω—è
    await asyncio.sleep(24 * 60 * 60)  # 1 –¥–µ–Ω—å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    await update.message.reply_text("‚ö†Ô∏è–£ –≤–∞—Å –∫–æ–Ω—á–∏–ª—Å—è –ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞!")
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–æ–≤
    tags = user_data.iloc[0]['–¢–µ–≥–∏'].split(',')
    tags = [tag for tag in tags if tag not in ['–û—Ç—Å—á—ë—Ç', '1 –º–µ—Å—è—Ü', '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø', '1 –Ω–µ–¥–µ–ª—è', '1 –¥–µ–Ω—å']]
    tags.append('–ü–æ–≤ –æ–ø–ª–∞—Ç–∞')
    tags.append('–û—Ç–∫–∞–∑–∞–ª—Å—è')
    user_data.at[user_data.index[0], '–¢–µ–≥–∏'] = ','.join(tags)
    save_tags_db(user_data)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ —Å —Ç–∞–π–º–µ—Ä–æ–º
async def send_main_content(update: Update, user_data):
    user_id = update.message.from_user.id  # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id –∏–∑ –æ–±—ä–µ–∫—Ç–∞ update
    # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–∏–µ —Ç–µ–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    print("–¢–µ–∫—É—â–∏–µ —Ç–µ–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", user_data.iloc[0]['–¢–µ–≥–∏'])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ "–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø" –∏ "1 –º–µ—Å—è—Ü" —Å—Ä–µ–¥–∏ —Ç–µ–≥–æ–≤
    if '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø' in user_data.iloc[0]['–¢–µ–≥–∏']:
        if '1 –º–µ—Å—è—Ü' in user_data.iloc[0]['–¢–µ–≥–∏']:
            tags = user_data.iloc[0]['–¢–µ–≥–∏'].split(',')
            if '–û—Ç—Å—á—ë—Ç' not in tags:
                tags.append('–û—Ç—Å—á—ë—Ç')
            user_data.at[user_data.index[0], '–¢–µ–≥–∏'] = ','.join(tags)
            save_tags_db(user_data)

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
        asyncio.create_task(start_subscription_timer(update, user_data))
        await send_instructions(update)
    
    # –í—Ç–æ—Ä–∞—è –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–µ–≥–∞ "—Ä–µ—Ñ–µ—Ä–∞–ª"
    elif '—Ä–µ—Ñ–µ—Ä–∞–ª' in user_data.iloc[0]['–¢–µ–≥–∏'].split(','):
        print("–¢–µ–≥ '—Ä–µ—Ñ–µ—Ä–∞–ª' –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é")
        await send_instructions(update)
    else:
        # –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ –∏–∑ —É—Å–ª–æ–≤–∏–π –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        print("–ù–∏ –æ–¥–Ω–æ –∏–∑ —É—Å–ª–æ–≤–∏–π –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –¢–µ–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", user_data.iloc[0]['–¢–µ–≥–∏'])