import pandas as pd
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from database import load_tags_db, add_id_and_tags, add_referral_id
from –û—Å–Ω–æ–≤–∞ import send_main_content

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
last_message_ids = {}


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_name = f"@{update.message.from_user.username}"  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = update.message.from_user.id  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    print(f"Start function called for user {user_id}")  # –û—Ç–ª–∞–¥–∫–∞ –Ω–∞—á–∞–ª–∞ —Ñ—É–Ω–∫—Ü–∏–∏

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_data = load_tags_db().loc[load_tags_db()['ID'] == user_id]

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞–ª —Å –±–æ—Ç–æ–º
    if user_data.empty:
        # –ü–æ–ø—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
        if user_id in last_message_ids:
            print(f"–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}...")  # –û—Ç–ª–∞–¥–∫–∞

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            for msg_id in last_message_ids[user_id]:
                try:
                    print(f"–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å message_id: {msg_id}")
                    await context.bot.delete_message(chat_id=update.message.chat_id, message_id=msg_id)
                    print(f"–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å message_id: {msg_id}")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å ID {msg_id}: {e}")
            # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
            last_message_ids[user_id] = []

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
        photo_path = r"C:\Users\User\Pictures\photo_5289552512413722406_y.jpg"
        sent_message = await update.message.reply_photo(photo=open(photo_path, 'rb'))
        print(f"–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, message_id: {sent_message.message_id}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
        last_message_ids.setdefault(user_id, []).append(sent_message.message_id)

        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        sent_message = await update.message.reply_text(
            "üôã‚Äç‚ôÇÔ∏è –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø - –±–æ—Ç –¥–ª—è —Å–∏–≥–Ω–∞–ª–æ–≤ [üöÄLucky Jet –∏ üí£Mines]üåê –Ø –¥–∞—é —Å–∏–≥–Ω–∞–ª—ã —Å –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–º –≤–∏–Ω—Ä–µ–π—Ç–æ–º 90%+ ‚ÄºÔ∏è "
            "–ù–∞—à –±–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ ChatGPT –∏ –µ—â—ë –±–æ–ª–µ–µ 100 –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π."
        )
        print(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, message_id: {sent_message.message_id}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        last_message_ids[user_id].append(sent_message.message_id)

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        add_id_and_tags(user_id, user_name)

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    print(f"–¢–µ–∫—É—â–∏–µ last_message_ids –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {last_message_ids[user_id]}")

    # –ü–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    user_data = load_tags_db().loc[load_tags_db()['ID'] == user_id]

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–µ–≥–∞ "—Ä–µ—Ñ–µ—Ä–∞–ª"
    if '—Ä–µ—Ñ–µ—Ä–∞–ª' in user_data.iloc[0]['–¢–µ–≥–∏'].split(','):
        await send_main_content(update, user_data)  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ ID —Ä–µ—Ñ–µ—Ä–∞–ª–∞
    if user_data.empty or pd.isna(user_data.iloc[0]['ID —Ä–µ—Ñ–µ—Ä–∞–ª–∞']):
        # –ï—Å–ª–∏ ID —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        keyboard = [
            [InlineKeyboardButton("üåê–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø", url="https://1warlo.top/?open=register&p=mr6e")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        sent_message = await update.message.reply_text(
            "üëÅÔ∏è–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ 1win. –ß—Ç–æ–±—ã –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –Ω—É–∂–Ω–æ —Å–æ–±–ª—é—Å—Ç–∏ –≤–∞–∂–Ω—ã–µ —É—Å–ª–æ–≤–∏—è.‚ÄºÔ∏è"
            "–ê–∫–∫–∞—É–Ω—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ù–û–í–´–ú! –ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø' –≤—ã –ø–æ–ø–∞–¥–∞–µ—Ç–µ –Ω–∞ —Å—Ç–∞—Ä—ã–π, "
            "–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–π—Ç–∏ —Å –Ω–µ–≥–æ –∏ –∑–∞–Ω–æ–≤–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É '–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø' –ø–æ—Å–ª–µ —á–µ–≥–æ –∑–∞–Ω–æ–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!‚ö†Ô∏è "
            "–ß—Ç–æ–±—ã –±–æ—Ç —Å–º–æ–≥ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥ 'GUBA100' –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏! "
            "–ü–æ—Å–ª–µ –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–µ–¥—ë—Ç –≤–∞—Å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É‚úîÔ∏è", reply_markup=reply_markup
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        last_message_ids[user_id].append(sent_message.message_id)

        await asyncio.sleep(5)  # –£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ ID
    if pd.isna(user_data.iloc[0]['ID —Ä–µ—Ñ–µ—Ä–∞–ª–∞']):
        sent_message = await update.message.reply_text("‚úîÔ∏è–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!")
        last_message_ids[user_id].append(sent_message.message_id)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, —á—Ç–æ –º—ã –æ–∂–∏–¥–∞–µ–º ID
        context.user_data['waiting_for_referral_id'] = True
        return


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID —Ä–µ—Ñ–µ—Ä–∞–ª–∞
async def receive_referral_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    referral_id = update.message.text

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ–∂–∏–¥–∞–µ–º –ª–∏ –º—ã ID
    if not context.user_data.get('waiting_for_referral_id', False):
        return

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_data = load_tags_db().loc[load_tags_db()['ID'] == user_id]

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å ID
    if not referral_id.isdigit():
        sent_message = await update.message.reply_text("‚ùå ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!")
        last_message_ids[user_id].append(sent_message.message_id)
        return

    add_referral_id(user_id, referral_id)
    await update.message.reply_text(f"‚úÖ –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª: {referral_id}")

    # –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ ID
    context.user_data['waiting_for_referral_id'] = False